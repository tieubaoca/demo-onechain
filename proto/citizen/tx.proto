syntax = "proto3";
package demoonechain.citizen;

// this line is used by starport scaffolding # proto/tx/import
import "citizen/citizen.proto";

option go_package = "demo-onechain/x/citizen/types";

// Msg defines the Msg service.
service Msg {
      rpc TransferOwnership(MsgTransferOwnership) returns (MsgTransferOwnershipResponse);
  rpc MintCitizen(MsgMintCitizen) returns (MsgMintCitizenResponse);
  rpc Approve(MsgApprove) returns (MsgApproveResponse);
  rpc SetApproveForAll(MsgSetApproveForAll) returns (MsgSetApproveForAllResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgTransferOwnership {
  string creator = 1;
  string newOwner = 2;
}

message MsgTransferOwnershipResponse {
}

message MsgMintCitizen {
  string creator = 1;
  string to = 2;
  string citizenId = 3;
  string title = 4;
  string description = 5;
  string uri = 6;
}

message MsgMintCitizenResponse {
  Citizen citizen = 1;
}

message MsgApprove {
  string creator = 1;
  string citizenId = 2;
  string operator = 3;
  bool isApproval = 4;
}

message MsgApproveResponse {
}

message MsgSetApproveForAll {
  string creator = 1;
  string operator = 2;
  bool isApproveForAll = 3;
}

message MsgSetApproveForAllResponse {
}

// this line is used by starport scaffolding # proto/tx/message
