syntax = "proto3";
package demoonechain.citizen;

import "gogoproto/gogo.proto";
import "citizen/params.proto";
import "citizen/owner.proto";
import "citizen/citizen.proto";
import "citizen/citizen_owner.proto";
import "citizen/citizen_ids.proto";
import "citizen/citizens_owned.proto";
import "citizen/approval.proto";
import "citizen/approval_for_all.proto";
// this line is used by starport scaffolding # genesis/proto/import

option go_package = "demo-onechain/x/citizen/types";

// GenesisState defines the citizen module's genesis state.
message GenesisState {
  Params params = 1 [(gogoproto.nullable) = false];
  Owner owner = 2;
  repeated Citizen citizenList = 3 [(gogoproto.nullable) = false];
  repeated CitizenOwner citizenOwnerList = 4 [(gogoproto.nullable) = false];
  repeated CitizenIds citizenIdsList = 5 [(gogoproto.nullable) = false];
  uint64 citizenIdsCount = 6;
  repeated CitizensOwned citizensOwnedList = 7 [(gogoproto.nullable) = false];
  repeated Approval approvalList = 8 [(gogoproto.nullable) = false];
  repeated ApprovalForAll approvalForAllList = 9 [(gogoproto.nullable) = false];
  // this line is used by starport scaffolding # genesis/proto/state
}
